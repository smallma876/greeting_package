/* 
"Rollup se encarga de compilar y empaquetar el proyecto en uno o más bundles. 
Un bundle es un archivo de salida que contiene todo el código fuente del proyecto, 
junto con sus dependencias, una vez que ha sido procesado mediante el sistema de construcción. 
Esto incluye la resolución de módulos, 
la transformación del código (por ejemplo, mediante plugins o transpiladores como Babel o TypeScript), 
y la optimización final del resultado."
*/
{
    "compilerOptions": {
        "declaration": true, // si es true genera archivos .d.ts
        "declarationDir": "lib/types", // directorio donde los creará
        // compila los archivos manteniendo lo que sea es6 y lo que sea más moderno lo lleva a versiones menores.
        // el valor de target puede cambiar el valor por defecto de la propiedad lib, se aconseja no configurar lib.
        "target": "es6",
        // le dice a TypeScript cómo debe encontrar los archivos a los que haces referencia con tus sentencias import o require en el código
        // las estrategias que existen son:
        /* 
            - node16 o nodenext: Versiones modernas de Node.js (v12 en adelante). Admite tanto esm como cjsm
            - node10(antes node): Para versiones de Node.js anteriores a la v10. Admite solo cjsm(require)
            - bundler: Para uso con empaquetadores (bundlers) como Webpack, Rollup, Vite, esbuild, etc. No exige extensiones de archivo
              en los imports
            - 

        */
        "moduleResolution": "node",
    },
    "include": [
        "src/**/*"
    ],
    "exclude": [
        "node_modules",
        "lib"
    ]
}